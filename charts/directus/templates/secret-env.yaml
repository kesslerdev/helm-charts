apiVersion: v1
kind: Secret
metadata:
  name: "{{ include "directus.fullname" . }}-envs"
  labels:
    {{- include "directus.labels" . | nindent 4 }}
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace (print (include "directus.fullname" .) "-envs")) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $adminPassword := (get $secretData "ADMIN_PASSWORD") |  default (.Values.directus.admin.password | default (randAlphaNum 32) | b64enc) }}
  ADMIN_PASSWORD: {{ $adminPassword | quote }}
  {{- $appSecret := (get $secretData "SECRET") | default (.Values.directus.secret | default (randAlphaNum 32) | b64enc) }}
  SECRET: {{ $appSecret | quote }}