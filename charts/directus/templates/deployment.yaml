apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "directus.fullname" . }}
  labels:
    {{- include "directus.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "directus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "directus.selectorLabels" . | nindent 8 }}
    spec:
      # Remove when using external storage
      strategy: Recreate
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "directus.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_CLIENT
              value: postgres
            - name: DB_HOST
              value: {{ include "directus.fullname" . }}-pg
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              value: {{ .Values.database.database }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.database.user }}.{{ include "directus.fullname" . }}-pg.credentials.postgresql.acid.zalan.do"
                  key: password
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.database.user }}.{{ include "directus.fullname" . }}-pg.credentials.postgresql.acid.zalan.do"
                  key: password
          envFrom:
            - configMapRef:
                name: "{{ include "directus.fullname" . }}-envs"
            - secretRef:
                name: "{{ include "directus.fullname" . }}-envs"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.persistence.enabled }}
          volumeMounts:
            - mountPath: "{{ .Values.persistence.mountPath }}"
              name: storage
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: {{ include "directus.fullname" . }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
